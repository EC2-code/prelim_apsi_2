{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Invic2s\\\\Documents\\\\4th_yr_repo\\\\prelim_repos\\\\prelim_apsi_2\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Game.css\";\nimport Chicken from \"./asset/chicken.jpg\";\nimport Banana from \"./asset/banana.jpg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board() {\n  const images = Array(18).fill({\n    type: \"chicken\",\n    img: Chicken\n  }).concat(Array(18).fill({\n    type: \"banana\",\n    img: Banana\n  }));\n  for (let i = images.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [images[i], images[j]] = [images[j], images[i]];\n  }\n  return images;\n}\n_c = Board;\nfunction GameApp() {\n  _s();\n  const [images, setImages] = useState(Board());\n  const [revealed, setRevealed] = useState(Array(36).fill(false));\n  const [player, setPlayer] = useState(\"chicken\");\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState('');\n  const [scores, setScores] = useState({\n    chicken: 0,\n    banana: 0\n  });\n  const chickenLeft = images.filter((tile, i) => tile.type === 'chicken' && !revealed[i]).length;\n  const bananaLeft = images.filter((tile, i) => tile.type === 'banana' && !revealed[i]).length;\n  function tileClick(click) {\n    if (gameOver || revealed[click]) return;\n    const updatedRevealed = [...revealed];\n    updatedRevealed[click] = true;\n    setRevealed(updatedRevealed);\n    if (images[click].type === player) {\n      const updatedRevealed = [...revealed];\n      updatedRevealed[click] = true;\n      setRevealed(updatedRevealed);\n      if (player === 'chicken' && chickenLeft === 1) {\n        setGameOver(true);\n        setWinner('Chicken Player');\n        setScores(prev => ({\n          ...prev,\n          chicken: prev.chicken + 1\n        }));\n      } else if (player === 'banana' && bananaLeft === 1) {\n        setGameOver(true);\n        setWinner('Banana Player');\n        setScores(prev => ({\n          ...prev,\n          banana: prev.banana + 1\n        }));\n      } else {\n        setPlayer(player === \"chicken\" ? \"banana\" : \"chicken\");\n      }\n    } else {\n      setGameOver(true);\n      const winPlayer = player === 'chicken' ? 'Banana Player' : 'Chicken Player';\n      setWinner(winPlayer);\n      setScores(prev => player === 'chicken' ? {\n        ...prev,\n        banana: prev.banana + 1\n      } : {\n        ...prev,\n        chicken: prev.chicken + 1\n      });\n    }\n  }\n  function restart() {\n    setImages(Board());\n    setRevealed(Array(36).fill(false));\n    setGameOver(false);\n    setWinner('');\n    setPlayer('chicken');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chicken-header\",\n          children: \" Chicken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"banana-header\",\n          children: \"Banana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Chicken: \", scores.chicken]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" | \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Banana: \", scores.banana]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Two players: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Chicken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 30\n        }, this), \" and \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Banana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 49\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 63\n        }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"winner\",\n          children: [winner, \" wins!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Current turn: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [player.charAt(0).toUpperCase() + player.slice(1), \" Player\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: images.map((tile, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flip-card\",\n        style: {\n          width: 50,\n          height: 80\n        } // adjust size as needed\n        ,\n        onClick: () => tileClick(idx),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flip-inner ${revealed[idx] ? 'flipped' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flip-front\",\n            children: idx + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flip-back\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"imgSquare\",\n              src: tile.img,\n              alt: tile.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"restart\",\n      onClick: restart,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(GameApp, \"xrLB9NG4C275jZNwYY64EvQIajA=\");\n_c2 = GameApp;\nexport default GameApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"GameApp\");","map":{"version":3,"names":["React","useState","Chicken","Banana","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","images","Array","fill","type","img","concat","i","length","j","Math","floor","random","_c","GameApp","_s","setImages","revealed","setRevealed","player","setPlayer","gameOver","setGameOver","winner","setWinner","scores","setScores","chicken","banana","chickenLeft","filter","tile","bananaLeft","tileClick","click","updatedRevealed","prev","winPlayer","restart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","idx","style","width","height","onClick","src","alt","_c2","$RefreshReg$"],"sources":["C:/Users/Invic2s/Documents/4th_yr_repo/prelim_repos/prelim_apsi_2/src/Game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Game.css\"\r\nimport Chicken from \"./asset/chicken.jpg\"\r\nimport Banana from \"./asset/banana.jpg\"\r\n\r\nfunction Board(){\r\n  const images = Array(18).fill({type: \"chicken\", img: Chicken})\r\n  .concat(Array(18).fill({type: \"banana\", img: Banana}));\r\n\r\n  for(let i = images.length - 1; i > 0; i--){\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [images[i], images[j]] = [images[j], images[i]];\r\n  }\r\n  return images;\r\n}\r\n\r\nfunction GameApp() {\r\n  const [images, setImages] = useState(Board());\r\n  const [revealed, setRevealed] = useState(Array(36).fill(false));\r\n  const [player, setPlayer] = useState(\"chicken\");\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState('');\r\n  const [scores, setScores] = useState({chicken: 0, banana: 0})\r\n  \r\n\r\n  const chickenLeft = images.filter((tile, i) => tile.type === 'chicken' && !revealed[i]).length;\r\n  const bananaLeft = images.filter((tile, i) => tile.type === 'banana' && !revealed[i]).length;\r\n\r\n  function tileClick(click){\r\n    if (gameOver || revealed[click]) return;\r\n    const updatedRevealed = [...revealed];\r\n    updatedRevealed[click] = true;\r\n    setRevealed(updatedRevealed);\r\n\r\n    if (images[click].type === player){\r\n      const updatedRevealed = [...revealed];\r\n      updatedRevealed[click] = true;\r\n      setRevealed(updatedRevealed);\r\n\r\n      if (player === 'chicken' && chickenLeft === 1){\r\n        setGameOver(true);\r\n        setWinner('Chicken Player');\r\n        setScores(prev => ({...prev, chicken: prev.chicken + 1}));\r\n      } else if(player === 'banana' && bananaLeft === 1){\r\n        setGameOver(true);\r\n        setWinner('Banana Player')\r\n        setScores(prev => ({...prev, banana: prev.banana + 1}));\r\n      } else{\r\n        setPlayer(player === \"chicken\" ? \"banana\" : \"chicken\");\r\n      }\r\n    } else {\r\n      setGameOver(true);\r\n      const winPlayer = player === 'chicken' ? 'Banana Player' : 'Chicken Player';\r\n      setWinner(winPlayer);\r\n      setScores(prev =>\r\n        player === 'chicken'\r\n        ? {...prev, banana: prev.banana + 1}\r\n        : {...prev, chicken: prev.chicken + 1}\r\n      );\r\n    }\r\n  }\r\n\r\n  function restart(){\r\n    setImages(Board());\r\n    setRevealed(Array(36).fill(false));\r\n    setGameOver(false);\r\n    setWinner('');\r\n    setPlayer('chicken');\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='Container'>\r\n        <div className='header'>\r\n            <h1>\r\n                <span className = \"chicken-header\" > Chicken</span>\r\n                <span className='banana-header'>Banana</span>\r\n            </h1>\r\n            <div>\r\n                <b>Score:</b>\r\n                <span> Chicken: {scores.chicken}</span>\r\n                <span> | </span>\r\n                <span> Banana: {scores.banana}</span>\r\n            </div>\r\n            <p>\r\n                Two players: <b>Chicken</b> and <b>Banana</b>.<br />\r\n                {gameOver\r\n                ? <span className='winner'>{winner} wins!</span>\r\n                : <>Current turn: <b>{player.charAt(0).toUpperCase() + player.slice(1)} Player</b></>\r\n                }\r\n            </p>\r\n        </div>\r\n        <div className='grid'>\r\n          {images.map((tile, idx) => (\r\n            <div\r\n              key={idx}\r\n              className=\"flip-card\"\r\n              style={{ width: 50, height: 80 }} // adjust size as needed\r\n              onClick={() => tileClick(idx)}\r\n            >\r\n              <div className={`flip-inner ${revealed[idx] ? 'flipped' : ''}`}>\r\n                {/* Front side */}\r\n                <div className=\"flip-front\">\r\n                  {idx + 1}\r\n                </div>\r\n\r\n                {/* Back side */}\r\n                <div className=\"flip-back\">\r\n                  <img\r\n                    className=\"imgSquare\"\r\n                    src={tile.img}\r\n                    alt={tile.type}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className = 'restart' onClick={restart}>Restart Game</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,KAAKA,CAAA,EAAE;EACd,MAAMC,MAAM,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC;IAACC,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAEX;EAAO,CAAC,CAAC,CAC7DY,MAAM,CAACJ,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC;IAACC,IAAI,EAAE,QAAQ;IAAEC,GAAG,EAAEV;EAAM,CAAC,CAAC,CAAC;EAEtD,KAAI,IAAIY,CAAC,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;IACxC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACN,MAAM,CAACM,CAAC,CAAC,EAAEN,MAAM,CAACQ,CAAC,CAAC,CAAC,GAAG,CAACR,MAAM,CAACQ,CAAC,CAAC,EAAER,MAAM,CAACM,CAAC,CAAC,CAAC;EACjD;EACA,OAAON,MAAM;AACf;AAACY,EAAA,GATQb,KAAK;AAWd,SAASc,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACd,MAAM,EAAEe,SAAS,CAAC,GAAGvB,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAACS,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC/D,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC8B,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC;IAACkC,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAC,CAAC,CAAC;EAG7D,MAAMC,WAAW,GAAG5B,MAAM,CAAC6B,MAAM,CAAC,CAACC,IAAI,EAAExB,CAAC,KAAKwB,IAAI,CAAC3B,IAAI,KAAK,SAAS,IAAI,CAACa,QAAQ,CAACV,CAAC,CAAC,CAAC,CAACC,MAAM;EAC9F,MAAMwB,UAAU,GAAG/B,MAAM,CAAC6B,MAAM,CAAC,CAACC,IAAI,EAAExB,CAAC,KAAKwB,IAAI,CAAC3B,IAAI,KAAK,QAAQ,IAAI,CAACa,QAAQ,CAACV,CAAC,CAAC,CAAC,CAACC,MAAM;EAE5F,SAASyB,SAASA,CAACC,KAAK,EAAC;IACvB,IAAIb,QAAQ,IAAIJ,QAAQ,CAACiB,KAAK,CAAC,EAAE;IACjC,MAAMC,eAAe,GAAG,CAAC,GAAGlB,QAAQ,CAAC;IACrCkB,eAAe,CAACD,KAAK,CAAC,GAAG,IAAI;IAC7BhB,WAAW,CAACiB,eAAe,CAAC;IAE5B,IAAIlC,MAAM,CAACiC,KAAK,CAAC,CAAC9B,IAAI,KAAKe,MAAM,EAAC;MAChC,MAAMgB,eAAe,GAAG,CAAC,GAAGlB,QAAQ,CAAC;MACrCkB,eAAe,CAACD,KAAK,CAAC,GAAG,IAAI;MAC7BhB,WAAW,CAACiB,eAAe,CAAC;MAE5B,IAAIhB,MAAM,KAAK,SAAS,IAAIU,WAAW,KAAK,CAAC,EAAC;QAC5CP,WAAW,CAAC,IAAI,CAAC;QACjBE,SAAS,CAAC,gBAAgB,CAAC;QAC3BE,SAAS,CAACU,IAAI,KAAK;UAAC,GAAGA,IAAI;UAAET,OAAO,EAAES,IAAI,CAACT,OAAO,GAAG;QAAC,CAAC,CAAC,CAAC;MAC3D,CAAC,MAAM,IAAGR,MAAM,KAAK,QAAQ,IAAIa,UAAU,KAAK,CAAC,EAAC;QAChDV,WAAW,CAAC,IAAI,CAAC;QACjBE,SAAS,CAAC,eAAe,CAAC;QAC1BE,SAAS,CAACU,IAAI,KAAK;UAAC,GAAGA,IAAI;UAAER,MAAM,EAAEQ,IAAI,CAACR,MAAM,GAAG;QAAC,CAAC,CAAC,CAAC;MACzD,CAAC,MAAK;QACJR,SAAS,CAACD,MAAM,KAAK,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC;MACxD;IACF,CAAC,MAAM;MACLG,WAAW,CAAC,IAAI,CAAC;MACjB,MAAMe,SAAS,GAAGlB,MAAM,KAAK,SAAS,GAAG,eAAe,GAAG,gBAAgB;MAC3EK,SAAS,CAACa,SAAS,CAAC;MACpBX,SAAS,CAACU,IAAI,IACZjB,MAAM,KAAK,SAAS,GAClB;QAAC,GAAGiB,IAAI;QAAER,MAAM,EAAEQ,IAAI,CAACR,MAAM,GAAG;MAAC,CAAC,GAClC;QAAC,GAAGQ,IAAI;QAAET,OAAO,EAAES,IAAI,CAACT,OAAO,GAAG;MAAC,CACvC,CAAC;IACH;EACF;EAEA,SAASW,OAAOA,CAAA,EAAE;IAChBtB,SAAS,CAAChB,KAAK,CAAC,CAAC,CAAC;IAClBkB,WAAW,CAAChB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClCmB,WAAW,CAAC,KAAK,CAAC;IAClBE,SAAS,CAAC,EAAE,CAAC;IACbJ,SAAS,CAAC,SAAS,CAAC;EACtB;EAGA,oBACEvB,OAAA;IAAK0C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB3C,OAAA;MAAK0C,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnB3C,OAAA;QAAA2C,QAAA,gBACI3C,OAAA;UAAM0C,SAAS,EAAG,gBAAgB;UAAAC,QAAA,EAAE;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnD/C,OAAA;UAAM0C,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACL/C,OAAA;QAAA2C,QAAA,gBACI3C,OAAA;UAAA2C,QAAA,EAAG;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACb/C,OAAA;UAAA2C,QAAA,GAAM,YAAU,EAACf,MAAM,CAACE,OAAO;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvC/C,OAAA;UAAA2C,QAAA,EAAM;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChB/C,OAAA;UAAA2C,QAAA,GAAM,WAAS,EAACf,MAAM,CAACG,MAAM;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACN/C,OAAA;QAAA2C,QAAA,GAAG,eACc,eAAA3C,OAAA;UAAA2C,QAAA,EAAG;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,SAAK,eAAA/C,OAAA;UAAA2C,QAAA,EAAG;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,eAAA/C,OAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACnDvB,QAAQ,gBACPxB,OAAA;UAAM0C,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAEjB,MAAM,EAAC,QAAM;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,gBAC9C/C,OAAA,CAAAE,SAAA;UAAAyC,QAAA,GAAE,gBAAc,eAAA3C,OAAA;YAAA2C,QAAA,GAAIrB,MAAM,CAAC0B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG3B,MAAM,CAAC4B,KAAK,CAAC,CAAC,CAAC,EAAC,SAAO;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN/C,OAAA;MAAK0C,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBvC,MAAM,CAAC+C,GAAG,CAAC,CAACjB,IAAI,EAAEkB,GAAG,kBACpBpD,OAAA;QAEE0C,SAAS,EAAC,WAAW;QACrBW,KAAK,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAE,CAAC;QAAA;QAClCC,OAAO,EAAEA,CAAA,KAAMpB,SAAS,CAACgB,GAAG,CAAE;QAAAT,QAAA,eAE9B3C,OAAA;UAAK0C,SAAS,EAAE,cAActB,QAAQ,CAACgC,GAAG,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;UAAAT,QAAA,gBAE7D3C,OAAA;YAAK0C,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBS,GAAG,GAAG;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAGN/C,OAAA;YAAK0C,SAAS,EAAC,WAAW;YAAAC,QAAA,eACxB3C,OAAA;cACE0C,SAAS,EAAC,WAAW;cACrBe,GAAG,EAAEvB,IAAI,CAAC1B,GAAI;cACdkD,GAAG,EAAExB,IAAI,CAAC3B;YAAK;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAnBDK,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/C,OAAA;MAAQ0C,SAAS,EAAG,SAAS;MAACc,OAAO,EAAEf,OAAQ;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAAC7B,EAAA,CAzGQD,OAAO;AAAA0C,GAAA,GAAP1C,OAAO;AA2GhB,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAA2C,GAAA;AAAAC,YAAA,CAAA5C,EAAA;AAAA4C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}